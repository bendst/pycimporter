/* Generated by Cython 0.23.1 */

#ifndef __PYX_HAVE__pycimport
#define __PYX_HAVE__pycimport


#ifndef __PYX_HAVE_API__pycimport

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C DL_IMPORT(void) setEnv(char *);
__PYX_EXTERN_C DL_IMPORT(PyObject) *listAttr(PyObject *);
__PYX_EXTERN_C DL_IMPORT(int) isClass(PyObject *);
__PYX_EXTERN_C DL_IMPORT(int) isMethod(PyObject *);
__PYX_EXTERN_C DL_IMPORT(int) isModul(PyObject *);
__PYX_EXTERN_C DL_IMPORT(PyObject) *newClass(PyObject *, char *, PyObject *);
__PYX_EXTERN_C DL_IMPORT(PyObject) *callObjMethod(PyObject *, char *, PyObject *);
__PYX_EXTERN_C DL_IMPORT(PyObject) *loadModule(char *);
__PYX_EXTERN_C DL_IMPORT(int) isCallableObject(PyObject *, char *);
__PYX_EXTERN_C DL_IMPORT(PyObject) *getParameter(PyObject *, char *);
__PYX_EXTERN_C DL_IMPORT(int) hasParameter(PyObject *, PyObject *);
__PYX_EXTERN_C DL_IMPORT(PyObject) *callObject(PyObject *, char *);
__PYX_EXTERN_C DL_IMPORT(PyObject) *callObjectArgs(PyObject *, char *, PyObject *);

#endif /* !__PYX_HAVE_API__pycimport */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initpycimport(void);
#else
PyMODINIT_FUNC PyInit_pycimport(void);
#endif

#endif /* !__PYX_HAVE__pycimport */
